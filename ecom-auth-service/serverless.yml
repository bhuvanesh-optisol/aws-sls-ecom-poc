# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: ecom-auth-poc
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: "3"


provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 256
  stage: dev
  profile: default
  region: 'us-west-1'
  iam:
   role:
     statements:
       - Effect: Allow
         Action:
           - dynamodb:*
         Resource: arn:aws:dynamodb:us-west-1:441836939852:table/UsersTable
       - Effect: Allow
         Action:
           - dynamodb:*
         Resource: arn:aws:dynamodb:us-west-1:441836939852:table/CompanyTable
  # iamRoleStatements:
  #   - Effect: Allow,
  #     Action:
  #       - dynamodb:*
  #     Resource:
  #       - arn:aws:dynamodb:eu-west-1:441836939852:table/UsersTable

plugins:
  - serverless-bundle
  - serverless-pseudo-parameters

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: UsersTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
    CompanyTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: CompanyTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

functions:
  register:
    handler: handlers/register.handler
    events:
      - http:
          method: POST
          path: /register
  companyRegister:
      handler: handlers/companyRegister.handler
      events:
        - http:
            method: POST
            path: /company_register
  login:
    handler: handlers/login.handler
    events:
      - http:
          method: POST
          path: /login
  companyLogin:
      handler: handlers/companyLogin.handler
      events:
        - http:
            method: POST
            path: /company_login
  getUsers:
      handler: handlers/getUsers.handler
      events:
        - http:
            method: GET
            path: /get_users
  getCompanies:
      handler: handlers/getCompanies.handler
      events:
        - http:
            method: GET
            path: /get_companies
  getUserById:
    handler: handlers/getUserById.handler
    events:
      - http:
          method: GET
          path: /users_by_id/{id}
  getUserByCompanyId:
    handler: handlers/getUserByCompanyId.handler
    events:
      - http:
          method: GET
          path: /users_by_company_id/{id}
  updateUser:
    handler: handlers/updateUser.handler
    events:
      - http:
          method: PATCH
          path: /update_user/{id}
  updateCompany:
      handler: handlers/updateCompany.handler
      events:
        - http:
            method: PATCH
            path: /update_company/{id}
  deleteUser:
    handler: handlers/deleteUser.handler
    events:
      - http:
          method: DELETE
          path: /delete_user/{id}
  deleteCompany:
      handler: handlers/deleteCompany.handler
      events:
        - http:
            method: DELETE
            path: /delete_company/{id}
# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iam:
#    role:
#      statements:
#        - Effect: "Allow"
#          Action:
#            - "s3:ListBucket"
#          Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#        - Effect: "Allow"
#          Action:
#            - "s3:PutObject"
#          Resource:
#            Fn::Join:
#              - ""
#              - - "arn:aws:s3:::"
#                - "Ref" : "ServerlessDeploymentBucket"
#                - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  patterns:
#    - '!exclude-me.js'
#    - '!exclude-me-dir/**'
#    - include-me.js
#    - include-me-dir/**

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - httpApi:
#          path: /users/create
#          method: get
#      - websocket: $connect
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp
#      - alb:
#          listenerArn: arn:aws:elasticloadbalancing:us-east-1:XXXXXX:listener/app/my-load-balancer/50dc6c495c0c9188/
#          priority: 1
#          conditions:
#            host: example.com
#            path: /hello

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
custom:
  bundle:
    linting: false